version: "3"

services:
  create_topics_job:
    image: acss/core_service
    container_name: create_topics_job
    hostname: create_topics_job
    depends_on:
      - kafka_1
      - kafka_2
    #      - logstash
    environment:
      PYTHONPATH: /pipe
      ACSS_CONFIG_FILEPATH: /pipe/acss-config.yaml
    volumes:
      - "/tmp/:/tmp/"
      - "${ACSS_CONFIG_FILEPATH}:/pipe/acss-config.yaml"
    entrypoint:
      - /pipe/.venv/bin/python
      - create_topics.py
    profiles:
      - core
    networks:
      - pipenetwork

  old_agent:
    image: acss/service
    container_name: old_agent
    hostname: old_agent
    depends_on:
      - create_topics_job
      - register
    environment:
      PYTHONPATH: /pipe:/pipe/acss_service/
      ACSS_CONFIG_FILEPATH: /pipe/acss-config.yaml
      PATH_TO_ACSS_SERVICES_ROOT: "/pipe/acss_service/"
    volumes:
      - "${ACSS_CONFIG_FILEPATH}:/pipe/acss-config.yaml"
      - "${PATH_TO_ACSS_SERVICES_ROOT}/:/pipe/acss_service/"
    entrypoint:
      - /pipe/.venv/bin/python
      - agents/orbit_old/orbit_agent.py
    profiles:
      - testing
    networks:
      - pipenetwork

  silly_agent_callback:
    image: acss/service
    container_name: silly_agent_callback
    hostname: silly_agent_callback
    depends_on:
      - create_topics_job
      - register
    environment:
      PYTHONPATH: /pipe:/pipe/acss_service/
      ACSS_CONFIG_FILEPATH: /pipe/acss-config.yaml
      PATH_TO_ACSS_SERVICES_ROOT: "/pipe/acss_service/"
    volumes:
      - "${ACSS_CONFIG_FILEPATH}:/pipe/acss-config.yaml"
      - "${PATH_TO_ACSS_SERVICES_ROOT}/:/pipe/acss_service/"
    entrypoint:
      - /pipe/.venv/bin/python
      - agents/testing/silly_agent_callback.py
    profiles:
      - silly
    networks:
      - pipenetwork

  silly_agent:
    image: acss/service
    container_name: silly_agent
    hostname: silly_agent
    depends_on:
      - create_topics_job
      - register
    environment:
      PYTHONPATH: /pipe:/pipe/acss_service/
      ACSS_CONFIG_FILEPATH: /pipe/acss-config.yaml
      PATH_TO_ACSS_SERVICES_ROOT: "/pipe/acss_service/"
    volumes:
      - "${ACSS_CONFIG_FILEPATH}:/pipe/acss-config.yaml"
      - "${PATH_TO_ACSS_SERVICES_ROOT}/:/pipe/acss_service/"
    entrypoint:
      - /pipe/.venv/bin/python
      - agents/testing/silly_agent.py
    profiles:
      - testing
    networks:
      - pipenetwork

  silly_measure_agent:
    image: acss/service
    container_name: silly_measure_agent
    hostname: silly_measure_agent
    depends_on:
      - create_topics_job
      - register
    environment:
      PYTHONPATH: /pipe:/pipe/acss_service/
      ACSS_CONFIG_FILEPATH: /pipe/acss-config.yaml
      PATH_TO_ACSS_SERVICES_ROOT: "/pipe/acss_service/"
    volumes:
      - "${ACSS_CONFIG_FILEPATH}:/pipe/acss-config.yaml"
      - "${PATH_TO_ACSS_SERVICES_ROOT}/:/pipe/acss_service/"
    entrypoint:
      - /pipe/.venv/bin/python
      - agents/testing/silly_measure_agent.py
    profiles:
      - testing
    networks:
      - pipenetwork

  set_table_service:
    image: acss/service
    container_name: set_table_service
    hostname: set_table_service
    depends_on:
      - create_topics_job
      - register
    environment:
      PYTHONPATH: /pipe:/pipe/acss_service/
      ACSS_CONFIG_FILEPATH: /pipe/acss-config.yaml
      SERVICE_NAME: "set_table_service" # default name for testing
      SERVICE_MODE: "sim" # default mode for testing
      PATH_TO_ACSS_SERVICES_ROOT: "/pipe/acss_service/"
    volumes:
      - "${ACSS_CONFIG_FILEPATH}:/pipe/acss-config.yaml"
      - "${PATH_TO_ACSS_SERVICES_ROOT}/:/pipe/acss_service/"
    entrypoint:
      - /pipe/.venv/bin/python
      - agents/testing/set_table_service.py
    profiles:
      - testing
      - silly
    networks:
      - pipenetwork

  machine:
    build:
      context: ${PATH_TO_ACSS_SERVICES_ROOT}/machine
      dockerfile: ${PATH_TO_ACSS_SERVICES_ROOT}/acss_service.Dockerfile   
    image: acss/machine-service
    container_name: machine
    hostname: machine
    depends_on:
      - create_topics_job
      - register
    environment:
      PYTHONPATH: /pipe:/pipe/acss_service/
      ACSS_CONFIG_FILEPATH: /pipe/acss-config.yaml
      PATH_TO_ACSS_SERVICES_ROOT: "/pipe/acss_service/"
    volumes:
      - "${ACSS_CONFIG_FILEPATH}:/pipe/acss-config.yaml"
      - "${PATH_TO_ACSS_SERVICES_ROOT}/:/pipe/acss_service/"
    entrypoint:
      - /pipe/.venv/bin/python
      - machine/PetraSimMachine.py
    profiles:
      - at
      - simulation
    networks:
      - pipenetwork

  simulation:
    image: acss/service
    container_name: simulation
    hostname: simulation
    depends_on:
      - create_topics_job
      - register
    environment:
      PYTHONPATH: /pipe:/pipe/acss_service/
      ACSS_CONFIG_FILEPATH: /pipe/acss-config.yaml
      PATH_TO_ACSS_SERVICES_ROOT: "/pipe/acss_service/"
    volumes:
      - "${ACSS_CONFIG_FILEPATH}:/pipe/acss-config.yaml"
      - "${PATH_TO_ACSS_SERVICES_ROOT}/:/pipe/acss_service/"
    entrypoint:
      - /pipe/.venv/bin/python
      - simulations/orbit/PetraOrbitSimulation.py
    profiles:
      - at
      - simulation
    networks:
      - pipenetwork

  timed_silly_simulation:
    image: acss/service
    container_name: timed_silly_simulation
    hostname: timed_silly_simulation
    depends_on:
      - create_topics_job
      - register
    environment:
      PYTHONPATH: /pipe:/pipe/acss_service/
      ACSS_CONFIG_FILEPATH: /pipe/acss-config.yaml
      PATH_TO_ACSS_SERVICES_ROOT: "/pipe/acss_service/"
    volumes:
      - "${ACSS_CONFIG_FILEPATH}:/pipe/acss-config.yaml"
      - "${PATH_TO_ACSS_SERVICES_ROOT}/:/pipe/acss_service/"
    entrypoint:
      - /pipe/.venv/bin/python
      - simulations/testing/TimedSillySimulation.py
    profiles:
      - silly
    networks:
      - pipenetwork

  silly_simulation:
    image: acss/service
    container_name: silly_simulation
    hostname: silly_simulation
    depends_on:
      - create_topics_job
      - register
    environment:
      PYTHONPATH: /pipe:/pipe/acss_service/
      ACSS_CONFIG_FILEPATH: /pipe/acss-config.yaml
      PATH_TO_ACSS_SERVICES_ROOT: "/pipe/acss_service/"
    volumes:
      - "${ACSS_CONFIG_FILEPATH}:/pipe/acss-config.yaml"
      - "${PATH_TO_ACSS_SERVICES_ROOT}/:/pipe/acss_service/"
    entrypoint:
      - /pipe/.venv/bin/python
      - simulations/testing/SillySimulation.py
    profiles:
      - silly
    networks:
      - pipenetwork

  simulation_database:
    image: mariadb
    container_name: simulation_database
    hostname: simulation_database
    restart: always
    ports:
      - 3306:3306
    profiles:
      - simulation
    environment:
      MYSQL_ROOT_PASSWORD: ${ACSS_DB_PW}
      MYSQL_DATABASE: sim_db
    networks:
      - pipenetwork

  fill_sim_db_job:
    image: acss/core_service
    container_name: fill_sim_db_job
    hostname: fill_sim_db_job
    depends_on:
      - simulation_database
    profiles:
      - simulation
    environment:
      PYTHONPATH: /pipe:/pipe/acss_service/
      ACSS_CONFIG_FILEPATH: /pipe/acss-config.yaml
      PATH_TO_ACSS_SERVICES_ROOT: /pipe/acss_service/
    volumes:
      - "${ACSS_CONFIG_FILEPATH}:/pipe/acss-config.yaml"
      - "${PATH_TO_ACSS_SERVICES_ROOT}/:/pipe/acss_service/"
    entrypoint:
      - /pipe/.venv/bin/python
      - fill_sql_sim_db.py
    networks:
      - pipenetwork

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    hostname: phpmyadmin
    depends_on:
      - simulation_database
    restart: always
    ports:
      - 8088:80
    environment:
      PMA_HOST: simulation_database
      MYSQL_ROOT_PASSWORD: ${ACSS_DB_PW}
    profiles:
      - testing
      - simulation
    networks:
      - pipenetwork

  orb_cor_agent:
    image: acss/service
    container_name: orb_cor_agent
    hostname: orb_cor_agent
    depends_on:
      - create_topics_job
      - register
    environment:
      PYTHONPATH: /pipe:/pipe/acss_service/
      ACSS_CONFIG_FILEPATH: /pipe/acss-config.yaml
      PATH_TO_ACSS_SERVICES_ROOT: "/pipe/acss_service/"
      SERVICE_NAME: "orbit_corr_agent" # default name for testing
      SERVICE_MODE: "sim" # default mode for testing  
    volumes:
      - "${ACSS_CONFIG_FILEPATH}:/pipe/acss-config.yaml"
      - "${PATH_TO_ACSS_SERVICES_ROOT}/:/pipe/acss_service/"
    entrypoint:
      - /pipe/.venv/bin/python
      - agents/orbit/orbit_corr_agent.py
    profiles:
      - testing
      - prod
    networks:
      - pipenetwork

  config_to_file_1:
    image: acss/service
    container_name: config_to_file_1
    hostname: config_to_file_1
    depends_on:
      - create_topics_job
      - register
    environment:
      PYTHONPATH: /pipe:/pipe/acss_service/
      ACSS_CONFIG_FILEPATH: /pipe/acss-config.yaml
      PATH_TO_ACSS_SERVICES_ROOT: "/pipe/acss_service/"
      SERVICE_NAME: "config_to_file_1" # default name for testing
      SERVICE_MODE: "sim" # default mode for testing  
    volumes:
      - /tmp/:/tmp/
      - "${PATH_TO_ACSS_SERVICES_ROOT}/:/pipe/acss_service/"
      - "${ACSS_CONFIG_FILEPATH}:/pipe/acss-config.yaml"
    entrypoint:
      - /pipe/.venv/bin/python
      - agents/testing/config_to_file_service.py
    profiles:
      - testing
    networks:
      - pipenetwork

  config_to_file_2:
    image: acss/service
    container_name: config_to_file_2
    hostname: config_to_file_2
    depends_on:
      - create_topics_job
      - register
    environment:
      PYTHONPATH: /pipe:/pipe/acss_service/
      ACSS_CONFIG_FILEPATH: /pipe/acss-config.yaml
      PATH_TO_ACSS_SERVICES_ROOT: "/pipe/acss_service/"
      SERVICE_NAME: "config_to_file_2" # default name for testing
      SERVICE_MODE: "sim" # default mode for testing  
    volumes:
      - /tmp/:/tmp/
      - "${ACSS_CONFIG_FILEPATH}:/pipe/acss-config.yaml"
      - "${PATH_TO_ACSS_SERVICES_ROOT}/:/pipe/acss_service/"
    entrypoint:
      - /pipe/.venv/bin/python
      - agents/testing/config_to_file_service.py
    profiles:
      - testing
    networks:
      - pipenetwork

  http_proxy:
    image: acss/http_iface
    container_name: http_proxy
    hostname: http_proxy
    depends_on:
      - create_topics_job
      - register
      - kafka_1
      - kafka_2
    ports:
      - 5002:5002
    environment:
      PYTHONPATH: /pipe:/pipe/acss_service/
      ACSS_CONFIG_FILEPATH: /pipe/acss-config.yaml
      ACSS_CONFIG_FILEPATH_HOST: ${ACSS_CONFIG_FILEPATH}
      PATH_TO_ACSS_SERVICES_ROOT: ${PATH_TO_ACSS_SERVICES_ROOT} #needed because http_proxy can start services
    profiles:
      - core
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - "${ACSS_CONFIG_FILEPATH}:/pipe/acss-config.yaml"
      - "${PATH_TO_ACSS_SERVICES_ROOT}/:/pipe/acss_service/"
    networks:
      - pipenetwork
    working_dir: /pipe/acss_service/
    entrypoint:
      - /pipe/.venv/bin/python
      - /pipe/src/console/http_server.py

networks:
  pipenetwork:
    driver: bridge
