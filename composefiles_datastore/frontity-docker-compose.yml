version: "3"

services:
  wp:
    image: "wordpress:${WORDPRESS_VERSION}"
    ports:
      - 8080:80

    # The wordpress container will retry to connect to the mysql database for 30
    # seconds after starting. However, it might take longer than this for mysql
    # container to initialize (inluding loading data into the DB). For this
    # reason, if the wordpress container times out, we have to restart it.
    restart: always

    volumes:
      # Volume that is shared between WordPress and WP-CLI services.
      - wp_data:/var/www/html

      # The .htaccess file.
      - ./wp-data/.htaccess:/var/www/html/.htaccess

      # This volume is used for adding custom uploaded content to the WP
      # instance.
      - ./wp-data/uploads:/var/www/html/wp-content/uploads

    environment:
      WORDPRESS_DB_HOST: db
      WORDPRESS_DB_NAME: wordpress
      WORDPRESS_DB_USER: root
      WORDPRESS_DB_PASSWORD: password
      WORDPRESS_AUTH_KEY: wordpress-auth-key
      WORDPRESS_AUTH_SALT: wordpress-auth-salt
      # This makes WordPress point to the Frontity server running in the host
      # machine, which is accessible on the IP address `172.17.0.1` in linux or
      # using `host.docker.internal` in Mac and Windows.
      FRONTITY_SERVER: ${FRONTITY_SERVER}

    depends_on:
      - db
    links:
      - db

  wpcli:
    image: wordpress:cli
    volumes:
      # Needs to share a volume with the `wp` service so that the CLI can run
      # the commands.
      - wp_data:/var/www/html
    links:
      - db
    depends_on:
      - db
      - wp
    environment:
      WORDPRESS_DB_HOST: db
      WORDPRESS_DB_NAME: wordpress
      WORDPRESS_DB_USER: root
      WORDPRESS_DB_PASSWORD: password

  db:
    image: mariadb:latest
    command:
      [
        "--default_authentication_plugin=mysql_native_password",
        "--character-set-server=utf8mb4",
        "--collation-server=utf8mb4_unicode_ci",
      ]
    volumes:
      - db_data:/var/lib/mysql

      # The mysql container will load an .sql file in the ./wp-data folder This
      # way, we can specify the data outside the container and load it on
      # startup.
      - ./wp-data:/docker-entrypoint-initdb.d
    environment:
      MYSQL_DATABASE: wordpress
      MYSQL_ROOT_PASSWORD: password

volumes:
  wp_data:
  db_data:
