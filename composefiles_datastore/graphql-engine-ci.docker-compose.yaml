services:
  postgres:
    extends:
      file: ./docker-compose.yaml
      service: postgres

  postgres_connector:
    image: ghcr.io/hasura/ndc-postgres:dev-main
    ports:
      - 8080:8080
    environment:
      CONNECTION_URI: "postgresql://postgres:password@postgres"
      RUST_LOG: info
    volumes:
      - type: bind
        source: ./crates/engine/tests/ndc-postgres-configuration
        target: /etc/connector
        read_only: true
    depends_on:
      postgres:
        condition: service_healthy

  custom_connector:
    build:
      dockerfile: debug.Dockerfile
    entrypoint:
      - ./bin/custom-connector
    ports:
      - "8101:8101"
    environment:
      RUST_LOG: info
    healthcheck:
      test: curl -fsS http://localhost:8101/schema
      start_period: 5s
      interval: 5s
      timeout: 10s
      retries: 20

  source_only:
    build:
      dockerfile: debug.Dockerfile
    volumes:
      - ./auth_config.json:/app/auth_config.json
      - ./benchmark.sh:/app/benchmark.sh
      - ./coverage.sh:/app/coverage.sh
      - ./crates:/app/crates
      - ./coverage:/app/coverage

  test_setup:
    build:
      dockerfile: debug.Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
      postgres_connector:
        condition: service_healthy
      custom_connector:
        condition: service_healthy
    volumes:
      - ./auth_config.json:/app/auth_config.json
      - ./benchmark.sh:/app/benchmark.sh
      - ./coverage.sh:/app/coverage.sh
      - ./crates:/app/crates
      - ./coverage:/app/coverage

volumes:
  postgres:
