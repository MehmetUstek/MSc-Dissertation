version: '4'
services:
  db:
    container_name: db
    image: postgres
    restart: always
    environment:
      - POSTGRES_DATABASE=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST_AUTH_METHOD=trust
    ports:
      - '5432:5432'
    networks:
      - bitway
  backend:
    container_name: backend
    restart: always
    build:
      context: .
      args:
        - POSTGRES_HOST=db
        - POSTGRES_PWD=postgres
      dockerfile: Dockerfile.backend.dev
    volumes:
      - ./backend:/app/backend
      - /app/backend/node_modules
    ports:
      - "8000:8000"
    depends_on:
      - db
    networks:
      - bitway
    env_file:
      - .env.development
  frontend:
    container_name: frontend
    restart: always
    build:
      context: .
      args:
        - NEXT_PUBLIC_API_URL="http://backend:8000/api/"
      dockerfile: Dockerfile.frontend.dev
    volumes:
      - ./frontend:/app/frontend
      - /app/frontend/node_modules
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - bitway
    env_file:
      - ./frontend/.env.production
  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - bitway
    
networks:
  bitway:
    driver: bridge
