{#
This is a Jinja2 template. It should be processed into docker-compose.yaml using
the _gen_docker_compose command managed using tem. When running `docker-compose`
through tem, this is done automatically.
#}

{%- set tag %}
  {%- if env == 'dev' %}dev{% elif env == 'staging' %}staging{% else %}latest{% endif %}
{%- endset %}
{%- set suffix -%}{% if env == 'prod' %}-prod{% endif %}{% endset %}

{%- set worker_env_files %}
      - worker/.env/common
  {%- if env == 'staging' %}
      - worker/.env/staging.secret
  {%- elif env == 'prod' %}
      - worker/.env/prod.secret
  {%- endif %}
{%- endset %}

version: '3.4'

services:
  db:
    # Image
    image: postgres:14.1-alpine

    # Container
    container_name: veracioux-db{{suffix}}
    restart: always
    {%- if env == 'dev' or env == 'staging' %}
    ports: ["$DB_PORT:5432"]
    {%- endif %}
    env_file: &env_file
      - ./.env/common
      {%- if env == 'dev' %}
      - ./.env/dev
      {%- elif env == 'staging' %}
      - ./.env/staging
      - ./.env/staging.secret
      {%- elif env == 'prod' %}
      - ./.env/prod
      - ./.env/prod.secret
      {%- endif %}

  rabbitmq:
    image: rabbitmq:3.7
    container_name: veracioux-rabbitmq{{suffix}}
    {%- if env == 'dev' or env == 'staging' %}
    ports: ["$RABBITMQ_PORT:5672"]
    {%- endif %}
    env_file:
      {{worker_env_files}}

  web:
    # Image
    image: docker.veracioux.me/web:{{tag}}
    build:
      context: .
      dockerfile: _docker/Dockerfile.web.{{env}}

    # Container
    container_name: veracioux-web{{suffix}}
    restart: always
    depends_on:
      - api
      - worker
      {%- if env == "dev" %}
      - frontend
      {%- endif %}
    ports:
      {%- if env == "staging" and machine == "public" %}
      - "$WEB_PORT_STAGING:$WEB_PORT"
      {%- else %}
      - "$WEB_PORT:$WEB_PORT"
      {%- endif %}
    env_file: *env_file
    environment: &env
      {%- if env == 'dev' %}
      - PYTHONDONTWRITEBYTECODE=true
      - FRONTEND_HOST=frontend
      {%- endif %}
      - API_HOST=api
      - DB_HOST=db
      - WORKER_SERVER_HOST=worker
    volumes:
      - web_static:/var/static_root:rw
    {%- if env == 'staging' and machine == 'public' %}
      - $HOME/auth:/var/www/auth
    {%- endif %}

  {%- if env == "dev" %}
  frontend:
    # Image
    image: docker.veracioux.me/frontend:{{env}}
    build:
      context: frontend
      dockerfile: _docker/Dockerfile.frontend.{{env}}

    # Container
    container_name: veracioux-frontend{{suffix}}
    restart: always
    ports:
      - "$FRONTEND_PORT:$FRONTEND_PORT"
    env_file: *env_file
    volumes:
      - ./frontend:/app:rw
    user: {{uid}}:{{gid}}
  {%- endif %}

  api:
    # Image
    image: docker.veracioux.me/api:{{tag}}
    build:
      context: api
      dockerfile: _docker/Dockerfile.api.{{env}}

    # Container
    container_name: veracioux-api{{suffix}}
    restart: always
    depends_on: [db]
    {%- if env == 'dev' or env == 'staging' %}
    ports:
      - "$API_PORT:$API_PORT"
    {%- endif %}
    environment:
      - DB_HOST=db
    env_file: *env_file
    volumes:
      - web_static:/var/static_root:rw
      {%- if env == 'dev' %}
      - ./api:/app:rw
      {%- endif %}
    {%- if env == 'dev' %}
    user: {{uid}}:{{gid}}
    {%- endif %}

  worker:
    # Image
    image: docker.veracioux.me/worker:{{tag}}
    build:
      context: worker
      dockerfile: _docker/Dockerfile.worker.{{env}}

    # Container
    container_name: veracioux-worker{{suffix}}
    restart: always
    depends_on: [rabbitmq]
    {%- if env == 'dev' or env == 'staging' %}
    ports:
      - "$WORKER_SERVER_PORT:$WORKER_SERVER_PORT"
    {%- endif %}
    env_file:
      - ./.env/common
      {{worker_env_files}}
    environment:
      - RABBITMQ_HOST=rabbitmq

  worker_dotfiles:
    # Image
    image: docker.veracioux.me/worker_dotfiles:{{tag}}
    build:
      context: worker
      dockerfile: _docker/Dockerfile.worker_dotfiles.{{env}}

    # Container
    container_name: veracioux-worker_dotfiles{{suffix}}
    env_file:
      - ./.env/common
      {{worker_env_files}}
    environment:
      - RABBITMQ_HOST=rabbitmq

  mail:
    # Image
    image: docker.veracioux.me/mail:{{tag}}
    build:
      context: mail
      dockerfile: ../_docker/Dockerfile.mail.{{env}}

    # Container
    container_name: veracioux-mail{{suffix}}

  {%- if env == 'prod' %}
  docker-registry:
    image: registry:2
    container_name: veracioux-docker-registry{{suffix}}
    ports:
      - "$DOCKER_REGISTRY_PORT:5000"
    restart: always
    environment:
      REGISTRY_HTTP_HOST: https://docker.veracioux.me:443
      REGISTRY_AUTH: htpasswd
      REGISTRY_AUTH_HTPASSWD_REALM: "Registry"
      REGISTRY_AUTH_HTPASSWD_PATH: /auth/htpasswd
    volumes:
      - "${HOME}/auth:/auth"
      - "${HOME}/docker-registry:/var/lib/registry"
  {%- endif %}

volumes:
  web_static:

# vim: filetype=yaml
