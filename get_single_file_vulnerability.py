from compose.compose_vulnerability_detection import \
    get_compose_file_vulnerabilities
from dockerfileVulnerability.dockerfile_vulnerability_detection import (
    get_dockerfile_vulnerabilities, get_dockerfile_vulnerabilities_filecontent)
from utils.extension_enum import Extension
from terraform.terraform_vulnerability_scan import \
    get_terraform_file_vulnerabilities, get_terraform_file_vulnerabilities_filecontent
from utils.file_extension import get_file_extension, get_filename
from utils.check_file_extensions import is_dockerfile, is_compose_yaml_file, is_terraform


def get_single_file_vulnerability_filepath(file_path, baseImageScan = False, isVerbose = True):
    if is_dockerfile(file_path) or get_filename(file_path) == "Dockerfile" :
        return get_dockerfile_vulnerabilities(file_path, baseImageScan, isVerbose=isVerbose)
    elif is_compose_yaml_file(file_path):
        # return vectoral_scan(file_path)
        return get_compose_file_vulnerabilities(file_path, isVerbose=isVerbose)
    elif is_terraform(file_path):
        return get_terraform_file_vulnerabilities(file_path, isVerbose=isVerbose)
    else:
        return
    
def get_single_file_vulnerability_filecontent(file_content, file_extension, filename, baseImageScan = False, isVerbose = True):
    if file_extension == Extension.Dockerfile:
        return get_dockerfile_vulnerabilities_filecontent(filename, file_content,baseImageScan, isVerbose=isVerbose)
    elif file_extension == Extension.Compose:
        # TODO:Implement Filecontent.
        return get_compose_file_vulnerabilities(file_content, isVerbose=isVerbose)
    elif file_extension == Extension.Terraform:
        return get_terraform_file_vulnerabilities_filecontent(file_content,filename , isVerbose=isVerbose)
    else:
        return