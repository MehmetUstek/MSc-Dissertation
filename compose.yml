version: "3.8"
services:
  account_service:
    image: dropdatabase233/account_service
    build: ./account_service
    ports:
      - "0.0.0.0:3080:8000"
    deploy:
      replicas: 1
      restart_policy:
        condition: any
    networks:
      - backend_network

  analytics_service:
    image: dropdatabase233/analytics_service
    build: ./analytics_service
    ports:
      - "0.0.0.0:3000:3000"
    networks:
      - backend_network
    deploy:
      replicas: 3
      restart_policy:
        condition: any

  authentication_service:
    image: dropdatabase233/authentication_service
    build: ./authentication_service
    ports:
      - "0.0.0.0:3001:3000"
    networks:
      - backend_network
    deploy:
      replicas: 1
      restart_policy:
        condition: any

  authorization_service:
    image: dropdatabase233/authorization_service
    build: ./authorization_service
    ports:
      - "0.0.0.0:3002:3000"
    networks:
      - backend_network
    deploy:
      replicas: 1
      restart_policy:
        condition: any

  content_storage_service:
    image: dropdatabase233/content_storage_service
    build: ./content_storage_service
    ports:
      - "0.0.0.0:3003:3000"
    networks:
      - backend_network
    deploy:
      replicas: 1
      restart_policy:
        condition: any
      # placement:
      #   constraints: [node.labels.type == queue]

  payment_gateway_service:
    image: dropdatabase233/payment_gateway_service
    build: ./payment_gateway_service
    ports:
      - "0.0.0.0:3004:3000"
    networks:
      - backend_network
    deploy:
      replicas: 1
      restart_policy:
        condition: any

  payment_service:
    image: dropdatabase233/payment_service
    build: ./payment_service
    ports:
      - "0.0.0.0:3005:3000"
    networks:
      - backend_network
    deploy:
      replicas: 1
      restart_policy:
        condition: any

  personalization_service:
    image: dropdatabase233/personalization_service
    build: ./personalization_service
    ports:
      - "0.0.0.0:3006:3000"
    networks:
      - backend_network
    deploy:
      replicas: 1
      restart_policy:
        condition: any

  rating_service:
    image: dropdatabase233/rating_service
    build: ./rating_service
    ports:
      - "0.0.0.0:3007:3000"
    networks:
      - backend_network
    deploy:
      replicas: 1
      restart_policy:
        condition: any

  stream_service:
    image: dropdatabase233/stream_service
    build: ./stream_service
    ports:
      - "0.0.0.0:3008:3000"
    networks:
      - backend_network
    deploy:
      replicas: 1
      restart_policy:
        condition: any

  subscription_service:
    image: dropdatabase233/subscription_service
    build: ./subscription_service
    ports:
      - "0.0.0.0:3009:3000"
    networks:
      - backend_network
    deploy:
      replicas: 1
      restart_policy:
        condition: any

  upload_service:
    image: dropdatabase233/upload_service
    build: ./upload_service
    ports:
      - "0.0.0.0:3010:3000"
    networks:
      - backend_network
    deploy:
      replicas: 1
      restart_policy:
        condition: any

  api_gateway_user_management:
    image: dropdatabase233/api_gateway_user_management
    build: ./api_gateway_user_management
    ports:
      - "0.0.0.0:3020:3000"
    networks:
      - backend_network
    restart: always

  api_gateway_content_management:
    image: dropdatabase233/api_gateway_content_management
    build: ./api_gateway_content_management
    ports:
      - "0.0.0.0:3021:3000"
    networks:
      - backend_network
    restart: always

  api_gateway_payment_service:
    image: dropdatabase233/api_gateway_payment_service
    build: ./api_gateway_payment_service
    ports:
      - "0.0.0.0:3022:3000"
    networks:
      - backend_network
    restart: always

networks:
  backend_network:
    driver: overlay
