import json
import subprocess

def outsource_image_vulnerability_scan(imagename):

    # Construct the command
    command = ['trivy', 'image', imagename, '--ignore-status', 'fixed', '-s', 'HIGH,CRITICAL',"--scanners", "vuln", "-f", "json"]

    # Execute the command
    process = subprocess.Popen(command, stdout=subprocess.PIPE, stderr=subprocess.PIPE)

    # Get the output and error messages
    stdout, stderr = process.communicate()

    matches = []
    # Print the output from Trivy
    print("Vulnerabilities found in the base image:")
    print(stdout.decode())
    results = json.loads(stdout.decode())["Results"]
    for result in results:
        # print("typeresult",type(result))
        if "Vulnerabilities" in result:
            for vulnerabilities in result["Vulnerabilities"]:
                print(vulnerabilities["Severity"],vulnerabilities["VulnerabilityID"])
                matches.append([f"Image vulnerability found in the base image: {vulnerabilities['VulnerabilityID']}", vulnerabilities["Severity"]])
                # for vulnerability in vulnerabilities:
                #     # print(vulnerability["Severity"])
                #     print(vulnerability)

        
            # print(vulnerabilities)
            # for vulnerability in vulnerabilities:
            #     print(vulnerability)
    # print("json",)

    # Print any errors
    if stderr:
        print("Errors:")
        print(stderr.decode())
    
    return matches


# outsource_image_vulnerability_scan("python:3.6-slim")
