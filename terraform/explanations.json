{
  "1": "Oracle Compute instance requests an IP reservation from a public pool. The compute instance has the ability to be reached from outside, you might want to sonder the use of a non public IP.",
  "2": "You should not use outdated/insecure TLS versions for encryption. You should be using TLS v1.2+.",
  "3": "Set associate_public_ip_address to false. You should limit the provision of public IP addresses for resources. Resources should not be exposed on the public internet, but should have access limited to consumers required for the function of your application.",
  "4": "Enable encryption. Block devices should be encrypted to ensure sensitive data is held securely at rest.",
  "5": "Consider changing from allow-all to 'redirect-to-https'. You should use HTTPS, which is HTTP over an encrypted (TLS) connection, meaning eavesdroppers cannot read your traffic.",
  "6": "You should not use outdated/insecure TLS versions for encryption. You should be using TLS v1.2+.",
  "7": "Assign 'audit' value to enabled_cloudwatch_logs_exports. Document DB does not have auditing by default. To ensure that you are able to accurately audit the usage of your DocumentDB cluster you should enable export logs.",
  "8": "Encryption of the underlying storage used by DocumentDB ensures that if their is compromise of the disks, the data is still protected.",
  "9": "By enabling encryption on EBS volumes you protect the volume, the disk I/O and any derived snapshots from compromise if intercepted.",
  "10": "Block devices should be encrypted to ensure sensitive data is held securely at rest.",
  "11": "Default VPC does not have a lot of the critical security features that standard VPC comes with, new resources should not be created in the default VPC and it should not be present in the Terraform.",
  "12": "Ensure access to specific required ports is allowed, and nothing else.",
  "13": "Opening up ports to connect out to the public internet is generally to be avoided. You should restrict access to IP addresses or ranges that are explicitly required where possible.",
  "14": "Opening up ACLs to the public internet is potentially dangerous. You should restrict access to IP addresses or ranges that explicitly require it where possible.",
  "15": "You should limit the provision of public IP addresses for resources. Resources should not be exposed on the public internet, but should have access limited to consumers required for the function of your application.",
  "16": "Repository image scans should be enabled to ensure vulnerable software can be discovered and remediated as soon as possible.",
  "17": "ECR images should be set to IMMUTABLE to prevent code injection through image mutation.",
  "18": "If your organization is subject to corporate or regulatory policies that require encryption of data and metadata at rest, we recommend creating a file system that is encrypted at rest, and mounting your file system using encryption of data in transit.",
  "19": "EKS clusters are available publicly by default, this should be explicitly disabled in the vpc_config of the EKS cluster resource.",
  "20": "You should ensure your Elasticsearch data is encrypted at rest to help prevent sensitive information from being read by unauthorised users.",
  "21": "Traffic flowing between Elasticsearch nodes should be encrypted to ensure sensitive data is kept private.",
  "22": "Plain HTTP is unencrypted and human-readable. This means that if a malicious actor was to eavesdrop on your connection, they would be able to see all of your data flowing back and forth.",
  "23": "You should not use outdated/insecure TLS versions for encryption. You should be using TLS v1.2+.",
  "24": "Data stored within an Elasticache replication node should be encrypted to ensure sensitive data is kept private.",
  "25": "Traffic flowing between Elasticache replication nodes should be encrypted to ensure sensitive data is kept private.",
  "26": "There are many scenarios in which you would want to expose a load balancer to the wider internet, but this check exists as a warning to prevent accidental exposure of internal assets. You should ensure that this resource should be exposed publicly.",
  "27": "By setting drop_invalid_header_fields to true, anything that doe not conform to well known, defined headers will be removed by the load balancer.",
  "28": "You should use HTTPS, which is HTTP over an encrypted (TLS) connection, meaning eavesdroppers cannot read your traffic.",
  "29": "CIS recommends that all access keys be associated with the root user be removed. Removing access keys associated with the root user limits vectors that the account can be compromised by. Removing the root user access keys also encourages the creation and use of role-based accounts that are least privileged.",
  "30": "Enable enable_key_rotation. You should configure your KMS keys to auto rotate to maintain security and defend against compromise.",
  "31": "Logging should be enabled to allow tracing of issues and activity to be investigated more fully. Logs provide additional information and context which is often invalauble during investigation",
  "32": "Logging should be enabled to allow tracing of issues and activity to be investigated more fully. Logs provide additional information and context which is often invalauble during investigation",
  "33": "Disable public access. Public access of the MQ broker should be disabled and only allow routes to applications that require access.",
  "34": "Encryption should be forced for Kafka clusters, including for communication between nodes. This ensure sensitive data is kept private.",
  "35": "Enable storage encrytion. Encryption of Neptune storage ensures that if their is compromise of the disks, the data is still protected.",
  "36": "Should include kms_key_arn= true.Encryption using AWS keys provides protection for your Neptune underlying storage. To increase control of the encryption and manage factors like rotation use customer managed keys.",
  "37": "Enabling Performance insights allows for greater depth in monitoring data. For example, information about active sessions could help diagose a compromise or assist in the investigation",
  "38": "AWS Classic resources run in a shared environment with infrastructure owned by other AWS customers. You should run resources in a VPC instead.",
  "39": "Disable public access. (publicly_accessible) Database resources should not publicly available. You should limit all access to the minimum that is required for your application to function.",
  "40": "S3 buckets should ignore public ACLs on buckets and any objects they contain. By ignoring rather than blocking, PUT calls with public ACLs will still be applied but the ACL will be ignored.",
  "41": "Set acl to 'private' instead of public-read. Buckets should not have ACLs that allow public access",
  "42": "S3 buckets should restrict public policies for the bucket. By enabling, the restrict_public_buckets, only the bucket owner and AWS Services can access if it has a public policy.",
  "43": "The data.http block can be used to send secret data outside of the organisation.",
  "44": "Cloudwatch Container Insights provide more metrics and logs for container based applications and micro services.",
  "45": "Enable cache_data_encrypted. Method cache encryption ensures that any sensitive data in the cache is not vulnerable to compromise in the event of interception",
  "46": "Enable xray_tracing_enabled. X-Ray tracing enables end-to-end debugging and analysis of all API Gateway HTTP requests",
  "47": "API Gateway methods should generally be protected by authorization or api key. OPTION verb calls can be used without authorization",
  "48": "",
  "49": "Athena databases and workspace result sets should be encrypted at rests. These databases and query sets are generally derived from data in S3 buckets and should have the same level of at rest protection.",
  "50": "IMDS v2 (Instance Metadata Service) introduced session authentication tokens which improve security when talking to IMDS. By default aws_instance resource sets IMDS session auth tokens to be optional. To fully protect IMDS you need to enable session tokens by using metadata_options block and its http_tokens variable set to required.",
  "51": "Enable logging with any configuration as such:logging_config {include_cookies = false} You should configure CloudFront Access Logging to create log files that contain detailed information about every user request that CloudFront receives",
  "52": "When creating Cloudtrail in the AWS Management Console the trail is configured by default to be multi-region, this isn't the case with the Terraform resource. Cloudtrail should cover the full AWS account to ensure you can track changes in regions you are not actively operting in.",
  "53": "Cloudtrail logs should be encrypted at rest to secure the sensitive data. Cloudtrail logs record all activity that occurs in the the account through API calls and would be one of the first places to look when reacting to a breach.",
  "54": "Log validation should be activated on Cloudtrail logs to prevent the tampering of the underlying data in the S3 bucket. It is feasible that a rogue actor compromising an AWS account might want to modify the log data to remove trace of their actions",
  "55": "CloudTrail is a web service that records AWS API calls made in a given account. The recorded information includes the identity of the API caller, the time of the API call, the source IP address of the API caller, the request parameters, and the response elements returned by the AWS service.",
  "56": "Amazon S3 bucket access logging generates a log that contains access records for each request made to your S3 bucket. An access log record contains details about the request, such as the request type, the resources specified in the request worked, and the time and date the request was processed.",
  "57": "CloudWatch log groups are encrypted by default, however, to get the full benefit of controlling key rotation and other KMS aspects a KMS CMK should be used.",
  "58": "All artifacts produced by your CodeBuild project pipeline should always be encrypted",
  "59": "The configuration aggregator should be configured with all_regions for the source. This will help limit the risk of any unmonitored configuration in regions that are thought to be unused.",
  "60": "Add your customer key such as 'kms_key_id = aws_kms_key.docdb_encryption.arn'. Encryption using AWS keys provides protection for your DocumentDB underlying storage. To increase control of the encryption and manage factors like rotation use customer managed keys.",
  "61": "DynamoDB tables should be protected against accidentally or malicious write/delete actions by ensuring that there is adequate protection.",
  "62": "DynamoDB tables are encrypted by default using AWS managed encryption keys. To increase control of the encryption and control the management of factors like key rotation, use a Customer Managed Key.",
  "63": "Encryption using AWS keys provides protection for your EBS volume. To increase control of the encryption and manage factors like rotation use customer managed keys.",
  "64": "Add description to the aws_security_group. Example: description = 'description_text'. Security group rules should include a description for auditing purposes. Simplifies auditing, debugging, and managing security groups.",
  "65": "Security group rules should include a description for auditing purposes. Simplifies auditing, debugging, and managing security groups.",
  "66": "IMDS v2 (Instance Metadata Service) introduced session authentication tokens which improve security when talking to IMDS. By default aws_instance resource sets IMDS session auth tokens to be optional. To fully protect IMDS you need to enable session tokens by using metadata_options block and its http_tokens variable set to required.",
  "67": "IMDS v2 (Instance Metadata Service) introduced session authentication tokens which improve security when talking to IMDS. By default aws_instance resource sets IMDS session auth tokens to be optional. To fully protect IMDS you need to enable session tokens by using metadata_options block and its http_tokens variable set to required.",
  "68": "Encryption using AWS keys provides protection for your EBS volume. To increase control of the encryption and manage factors like rotation use customer managed keys.",
  "69": "Images in the ECR repository are encrypted by default using AWS managed encryption keys. To increase control of the encryption and control the management of factors like key rotation, use a Customer Managed Key.",
  "70": "In aws_ecs_cluster enable Container Insights with 'setting {name  = 'containerInsights' value = 'enabled'}'. Cloudwatch Container Insights provide more metrics and logs for container based applications and micro services.",
  "71": "Amazon ES exposes four Elasticsearch logs through Amazon CloudWatch Logs: error logs, search slow logs, index slow logs, and audit logs.All the logs are disabled by default.",
  "72": "Security groups and security group rules should include a description for auditing purposes.",
  "73": "Redis clusters should have a snapshot retention time to ensure that they are backed up and can be restored if required.",
  "74": "IAM account password policies should prevent the reuse of passwords.",
  "75": "AM account password policies should ensure that passwords content including at least one lowercase character.",
  "76": "IAM account password policies should ensure that passwords content including at least one number.",
  "77": "IAM account password policies should ensure that passwords content including a symbol.",
  "78": "IAM account password policies should ensure that passwords content including at least one uppercase character.",
  "79": "IAM account password policies should have a maximum age specified.",
  "80": "IAM account password policies should ensure that passwords have a minimum length.The account password policy should be set to enforce minimum password length of at least 14 characters.",
  "81": "When the principal is an AWS service, the ARN of the specific resource within that service to grant permission to.",
  "82": "Add 'logs {general = true}'. Logging should be enabled to allow tracing of issues and activity to be investigated more fully. Logs provide additional information and context which is often invalauble during investigation",
  "83": "When enabling Performance Insights on an RDS cluster or RDS DB Instance, and encryption key should be provided.",
  "84": "Encryption should be enabled for an RDS Aurora cluster.When enabling encryption by setting the kms_key_id, the storage_encrypted must also be set to true.",
  "85": "Must include storage_encrypted  = true. Encryption should be enabled for an RDS Database instances. When enabling encryption by setting the kms_key_id.",
  "86": "Redshift clusters that contain sensitive data or are subject to regulation should be encrypted at rest to prevent data leakage should the infrastructure be compromised.",
  "87": "Redshift clusters that are created without subnet details will be created in EC2 classic mode, meaning that they will be outside of a known VPC and running in tennant.",
  "88": "S3 buckets should block public ACLs on buckets and any objects they contain. By blocking, PUTs with fail if the object has any public ACL.",
  "89": "S3 bucket policy should have block public policy to prevent users from putting a policy that enable public access.",
  "90": "Add server_side_encryption with the following settings: 'server_side_encryption_configuration {rule {apply_server_side_encryption_by_default {kms_master_key_id = 'arn'\n sse_algorithm     = 'aws:kms'}}}' S3 Buckets should be encrypted to protect the data that is stored within them if access is compromised.",
  "91": "Add a logging block to the resource to enable access logging. Such as 'logging {target_bucket = target-bucket}'. Buckets should have logging enabled so that access can be audited.",
  "92": "Enable Versioning with 'versioning {enabled = true}' Versioning in Amazon S3 is a means of keeping multiple variants of an object in the same bucket. You can use the S3 Versioning feature to preserve, retrieve, and restore every version of every object stored in your buckets. With versioning you can recover more easily from both unintended user actions and application failures.",
  "93": "Topics should be encrypted to protect their contents.",
  "94": "Queues should be encrypted to protect queue contents.",
  "95": "Workspace volumes for both user and root should be encrypted to protect the data stored on them.",
  "96": "You should not expose infrastructure to the public internet except where explicitly required",
  "97": "You should not expose infrastructure to the public internet except where explicitly required",
  "98": "For the purposes of security, the contents of the plaintext_value field have been marked as sensitive to Terraform, but this does not hide it from state files. State should be treated as sensitive always.",
  "99": "GitHub branch protection should be set to require signed commits. You can do this by setting the require_signed_commits attribute to 'true'.",
  "100": "GitHub repository should be set to use vulnerability alerts. You can do this by setting the vulnerability_alerts attribute to 'true'.",
  "101": "Github repository should be set to be private. You can do this by either setting private attribute to 'true' or visibility attribute to 'internal' or 'private'.",
  "102": "IAM groups should be protected with multi factor authentication to add safe guards to password compromise.Use terraform-module/enforce-mfa/aws to ensure that MFA is enforced"
}
